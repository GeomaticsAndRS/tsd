NAME
	./nimbus.exe − Cloud segmenter from satellite images


SYNOPSIS
	./nimbus.exe [--debug] [--nb-iter N] --im-pfx-map IM(1)… IM(n) --opt-law
	(2|3)¹ --opt-nfa (1|2)² [--nfa-epsilon EPS] [--p-value VAL] [--nb-shifts
	NB_SHIFT] [--opt-side-disp C] [--opt-side-sift C] [--opt-side-lum C]
	[--opt-side-nov C] [--opt-side-time C] [--im-disp D(1)… D(n)] [--opt-lum
	L --im-lum L(1)… L(n)] [--im-nov N(1)… N(n)] [--im-time T(1)… T(n)]
	[--im-sift S(1)… S(n)]

	¹ 2=product law, 3=Irwin-Hall law
	² 1=median for NFA, 2=summation of NFAs

DESCRIPTION
	Given several input series representating the same scenes s(n) at
   	different times n, this classifier produces a Boolean map series (B(n)),
   	indicating for each pixel of the s(t), if it is hidden by a cloud or
   	altered by shadow (value 1) or if is correctly visible (value 0).  This
   	classifier use 5 criteria. Each criterion is represented by an input
   	series to be processed. :

	− the texture of the scene (S(n));
	− the apparent displacement of clouds (D(n));
	− the novelty state of the scene (N(n));
	− the spatial luminance (L(n)); 
	− the temporal luminance (T(n)).

	The classifier is based on the Number of False Alarms (NFA) statistical
	test framework.

	Options are

	--debug
		print files and informations					
				
	--nb-iter I
	        number I of iterations of the process

	--im-pfx-map IM(1)… IM(N)
		N prefixes of the output Boolean images
     
	--opt-law (2|3)
		Kind of mixing law used to compute probabilities : 
		2=product law, 3=Irwin-Hall (summation) law	   	

	--opt-nfa (1|2)
	 	Kind of NFA law used to threshold  probabilities :
		1=median for NFA, 2=summation of NFAs
	
	--nfa-epsilon EPS
		Threshold for the NFA test (default 1).
	
	--p-value VAL
		P-value used for displaying intermediate series in debug-mode.
		Default value 0.95.
   	
	--nb-shifts NB_SHIFT
		Number of shifts, in each direction, applied to the patches

	--opt-side-disp C      
		Size side of the disparity square patches partionning each
		image.  Default value 100, giving, for a 500x500 images, 25
		patches.

        --opt-side-sift C
		Size side of the SIFT square patches partionning each image.
		Default value 100, giving, for a 500x500 images, 25 patches.

	--opt-side-lum C	
		Size side of the spatial luminance square patches partionning
		each image.  Default value 100, giving, for a 500x500 images, 25
		patches.

	--opt-side-nov C	
		Size side of the novelty square patches partionning each image.
		Default value 100, giving, for a 500x500 images, 25 patches.

	--opt-side-time C
		Size side of the temporal luminance square patches partionning
		each image.  Default value 100, giving, for a 500x500 images, 25
		patches.

	--im-nov N(1)… N(n) 
		List of images for the novelty criterion.	  

	--im-disp D(1)… D(n)
		List of images for the disparity criterion.	  

	--im-sift S(1)… S(n)
		List of images for the SIFT criterion.	  

	--opt-lum L 
		Futur obsolete parameter. Must be Set to value 0.

	--im-lum L(1)… L(n)
		List of images for the spatial luminance criterion.	  

	--im-time T(1)… T(n)
		List of images for the temporal luminance criterion.	  

CONFIGURATION
	Sources code of nimbus.exe must be compiled preferably upon Linux.
	Warning : image format used is TIF. RAW format is not supported.
	Input images must have the same size, and the 5 series of images, 
	if provided, must have the same number of images.

EXAMPLE
	With Bash commands :
	law=2; nfa=2; eps=1;
	pval=0.95; #  Smaller it is, more the false alarms numerous are.
	NBS=3; SD=500; SS=100; SL=100; SN=25; ST=100;

	fics_pfx=$(ls tile*02.tif | cut -d'_' -f4 | sed "s/^/$pfx/g");
	fics_lumi=$(ls tile*02.tif);
	fics_sift=$(ls tile*02.tif);
	fics_disp=$(ls tile*02_vs_04_+_rof.tif);
	fics_novo=$(ls tile*02.tif);
	fics_time=$(ls tile*02.tif);

	$NIM --debug --opt-law $law --opt-nfa $nfa --nfa-epsilon $eps \
	--p-value $pval --nb-shifts $NBS --opt-side-disp $SD \
	--opt-side-sift $SS --opt-side-lum $SL --opt-side-nov $SN \
	--opt-side-time $ST --opt-lum 0 --im-pfx-map $fics_pfx \
	--im-time $fics_time --im-nov $fics_novo --im-sift $fics_sift
	 --im-disp $fics_disp --opt-lum 0 --im-lum $fics_lumi ;

AUTHOR
	Tristan Dagobert
	tristan.dagobert@cmla.ens-cachan.fr

